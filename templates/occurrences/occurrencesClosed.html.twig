{% extends 'layoutAdmin.html.twig' %}

{% block stylesheets %}
    {{ parent() }}
    <link rel="stylesheet" href="{{ asset('css/tableOccurrences.css') }}">
{% endblock %}

{% block admin_content %}
{{ dump(occurrencesData) }}


<section class="content" data-page="OCORRÊNCIAS ENCERRADAS">
    <!-- Filtros de Pesquisa -->
    {# <div class="filter-box collapse" id="filterSection">
        <div class="filter-content filter-controls occurrence-controls">
            <div class="row mb-4">
                <div class="col-md-4">
                    <label for="typeFilter">Tipo:</label>
                    <select id="typeFilter" class="form-control">
                        <option value="">Todos</option>
                        <option value="tipo1">Tipo 1</option>
                        <option value="tipo2">Tipo 2</option>
                        <option value="tipo3">Tipo 3</option>
                    </select>
                </div>
                <div class="col-md-4">
                    <label for="responsibleFilter">Responsável:</label>
                    <select id="responsibleFilter" class="form-control">
                        <option value="">Todos</option>
                        <option value="responsavel1">Responsável 1</option>
                        <option value="responsavel2">Responsável 2</option>
                        <option value="responsavel3">Responsável 3</option>
                    </select>
                </div>
                <div class="col-md-4">
                    <label for="occurredDateFilter">Data de Ocorrência:</label>
                    <input type="date" id="startOccurredDate" class="form-control mb-2" placeholder="Data Inicial">
                    <input type="date" id="endOccurredDate" class="form-control" placeholder="Data Final">
                </div>
            </div>
            <div class="col-md-12 text-center">
                <button class="btn btn-danger" type="button" data-toggle="collapse" aria-expanded="false">
                    Limpar Filtro
                </button>
                <button class="btn btn-dark" type="button" data-toggle="collapse" aria-expanded="false">
                    Aplicar Filtro
                </button>
            </div>
        </div>
    </div> #}

    <div class="container-fluid">
        <!-- Botão de Filtros -->
        <div class="row mb-4">
            <div class="col-md-4">
                <input type="text" id="occurrenceSearch" class="form-control" placeholder="Pesquisar..." aria-controls="occurrencesTable">
            </div>
            <div class="col-md-4 text-left">
                <button class="btn btn-dark" type="button" data-toggle="collapse" data-target="#filterSection" aria-expanded="false" aria-controls="filterSection">
                    <i class="fas fa-filter fa-chevron-down"></i>
                </button>
            </div>
            <div class="col-md-4 text-right">
                <a href="{{ path('occurrences_management') }}" class="btn btn-dark">
                    Ocorrências Abertas
                </a>
            </div>
        </div>

        <!-- Tabela de Ocorrências -->
        <div class="table-responsive tableOccurrenceContainer">
            <table id="occurrencesTable" class="table table-striped table-bordered" style="width:100%">
                <thead>
                    <tr>
                    <!-- Adicionado via javascript -->
                    </tr>
                </thead>
                <tbody>
                    <!-- Adicionado via javascript -->
                </tbody>
            </table>
        </div>
    </div>
</section>
{% include 'occurrences/ModalReopenConfirm.html.twig' %}

{% endblock %}

{% block javascripts %}
{{ parent() }}
<script>
    var occurrencesTable;
    var occurrencesTableData = [
        {% for occurrenceData in occurrencesData %}
            {
               id: {{ occurrenceData.id }},
               occurrenceCode: "{{ occurrenceData.occurrenceCode }}",
               title: "{{ occurrenceData.title }}",
               status: "{{ occurrenceData.status }}",
               occurrenceDate: "{{ occurrenceData.occurredDate ? occurrenceData.occurredDate|date('Y-m-d') : '' }}",
               occurrenceType: "{{ occurrenceData.occurrenceTypeName }}",
               closedDate: "{{ occurrenceData.closedDate ? occurrenceData.closedDate|date('Y-m-d') : '' }}",
            },
        {% endfor %}
    ];
function formatDate(date) {
    if (!date) return 'Não definido';
   
    const d = new Date(date);
    const year = d.getFullYear();
    const month = String(d.getMonth() + 1).padStart(2, '0'); // Mês é zero-indexado
    const day = String(d.getDate()).padStart(2, '0');
    const hours = String(d.getHours()).padStart(2, '0');
    const minutes = String(d.getMinutes()).padStart(2, '0');

    return `${day}/${month}/${year}`;
}   

function setupOccurrencesDataTable() {
    if ($.fn.DataTable.isDataTable('#occurrencesTable')) {
        $('#occurrencesTable').DataTable().clear().destroy();
    }

    occurrencesTable = $('#occurrencesTable').DataTable({
        searching: true,
        paging: false,
        info: false,
        data: occurrencesTableData,
        columns: [
            { data: 'id', title: 'ID', visible: false },
            { data: 'occurrenceCode', title: 'Código' },
            { data: 'title', title: 'Título' },
            { data: 'status', title: 'Status' },
            { data: 'occurrenceDate', title: 'Data da Ocorrência' },
            { data: 'occurrenceType', title: 'Tipo' },
            { data: 'closedDate', title: 'Data Encerramento' },
            { title: 'Ações' }
        ],
        columnDefs: [
            {
                targets: 4, // Índice da coluna "Data da Ocorrência"
                render: function (data, type, row, meta) {
                    return formatDate(data);
                }
            },
            {
                targets: 6, // Índice da coluna "Data Encerramento"
                render: function (data, type, row, meta) {
                    return formatDate(data);
                }
            },
            {
                targets: -1, // Última coluna (Ações)
                render: function (data, type, row, meta) {
                    var occurrenceId = row.id; 
                    return `
                        <button class="btn-action occurrence-view" title="Visualizar" data-occurrence-id="${occurrenceId}"><i class="fa fa-eye"></i></button>
                        <button class="btn-action occurrence-open" title="Reabrir ocorrência" data-occurrence-id="${occurrenceId}" data-bs-toggle="modal" data-bs-target="#modalReopenConfirm"><i class="fa fa-unlock"></i></button>
                    `;
                }
            }
        ],
        lengthChange: false,
        ordering: true,
        dom: 'lrtip',
        scrollX: true,
        fixedHeader: true,
        language: {
            zeroRecords: "Nenhum registro correspondente encontrado",
            emptyTable: "Nenhum dado disponível na tabela"
        }
    });

    adjustTable();
}

function adjustTable() {
    setTimeout(function() {
        occurrencesTable.columns.adjust().draw();
    }, 100);
}

$(document).ready(function() {
    // Inicialização do DataTables
    setupOccurrencesDataTable();

    // Filtro de pesquisa personalizado
    $('#occurrenceSearch').on('keyup', function() {
        occurrencesTable.search(this.value).draw();
    });

    // Exibição dos filtros ao clicar no botão
    $('#filterSection').on('shown.bs.collapse', function () {
        $('.btn-filter').addClass('active'); // Adiciona classe de destaque ao botão de filtro
        $('.filter-box').slideDown(); // Animação de slide para exibir os filtros
    });

    // Ocultação dos filtros ao fechar o modal
    $('#filterSection').on('hidden.bs.collapse', function () {
        $('.btn-filter').removeClass('active'); // Remove classe de destaque ao fechar os filtros
        $('.filter-box').slideUp(); // Animação de slide para ocultar os filtros
    });


    // Reabrir Ocorrência
    $(document).on('click', '.occurrence-open', function () {
        var occurrenceId = $(this).data('occurrence-id');
        $('#modalReopenConfirm').data('occurrence-id', occurrenceId).modal('show');
    });

    $('#confirmReopen').on('click', function() {
        var occurrenceId = $('#modalReopenConfirm').data('occurrence-id');

        $.ajax({
            url: '/occurrence-reopen', 
            type: 'POST',
            data: JSON.stringify({ occurrenceId: occurrenceId }),
            contentType: 'application/json',
            success: function(response) {
                $(document).Toasts('create', {
                    icon: 'fas fa-check',
                    title: 'Ocorrência reaberta com sucesso',
                    class: 'bg-success mt-2 mr-2',
                    autohide: true,
                    delay: 5000,
                    autoremove: false
                });
                $('#modalReopenConfirm').modal('hide');

                occurrencesTableData = occurrencesTableData.filter(function(occurrence) {
                    console.log("dentro da tabela",occurrence)
                    return occurrence.id != occurrenceId; 
                });

                occurrencesTable.rows().every(function(rowIdx, tableLoop, rowLoop) {
                    console.log("dentro de this data",this.data()[0])
                    if (this.data()[0] == occurrenceId) {
                        this.remove();
                    }
                });

                occurrencesTable.draw();
                setupOccurrencesDataTable();
            },
            error: function(error) {
                console.error(error);
                $(document).Toasts('create', {
                    icon: 'fas fa-times',
                    title: 'Erro ao reabrir ocorrência',
                    class: 'bg-danger mt-2 mr-2',
                    autohide: true,
                    delay: 5000,
                    autoremove: false
                });
                $('#modalReopenConfirm').modal('hide');
            }
        });
    });
});
</script>
{% endblock %}
