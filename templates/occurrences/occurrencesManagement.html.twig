{% extends 'layoutAdmin.html.twig' %}

{% block stylesheets %}
    {{ parent() }}
    <link rel="stylesheet" href="{{ asset('css/tableOccurrences.css') }}">
{% endblock %}

{% block admin_content %}
{# {{ dump(occurrencesData) }} #}


<section class="content" data-page="OCORRÊNCIAS EM ANDAMENTO">
    <!-- Filtros de Pesquisa -->
    <div class="filter-box collapse" id="filterSection">
        <div class="filter-content filter-controls occurrence-controls">
            <div class="row mb-4">
                <div class="col-md-3">
                    <label for="statusFilter">Status:</label>
                    <select id="statusFilter" class="form-control">
                        <option value="">Todos</option>
                        <option value="aberta">Abertas</option>
                        <option value="andamento">Em Andamento</option>
                        <option value="concluida">Concluídas</option>
                    </select>
                </div>
                <div class="col-md-3">
                    <label for="typeFilter">Tipo:</label>
                    <select id="typeFilter" class="form-control">
                        <option value="">Todos</option>
                        <option value="tipo1">Tipo 1</option>
                        <option value="tipo2">Tipo 2</option>
                        <option value="tipo3">Tipo 3</option>
                    </select>
                </div>
                <div class="col-md-3">
                    <label for="priorityFilter">Prioridade:</label>
                    <select id="priorityFilter" class="form-control">
                        <option value="">Todas</option>
                        <option value="baixa">Baixa</option>
                        <option value="media">Média</option>
                        <option value="alta">Alta</option>
                    </select>
                </div>
                <div class="col-md-3">
                    <label for="responsibleFilter">Responsável:</label>
                    <select id="responsibleFilter" class="form-control">
                        <option value="">Todos</option>
                        <option value="responsavel1">Responsável 1</option>
                        <option value="responsavel2">Responsável 2</option>
                        <option value="responsavel3">Responsável 3</option>
                    </select>
                </div>
            </div>
            <div class="row mb-4">               
                <div class="col-md-6">
                    <label for="occurredDateFilter">Data de Ocorrência:</label>
                    <input type="date" id="startOccurredDate" class="form-control mb-2" placeholder="Data Inicial">
                    <input type="date" id="endOccurredDate" class="form-control" placeholder="Data Final">
                </div>
                <div class="col-md-6">
                    <label for="slaDueDateFilter">SLA Vencimento:</label>
                    <input type="date" id="startSlaDueDate" class="form-control mb-2" placeholder="Data Inicial">
                    <input type="date" id="endSlaDueDate" class="form-control" placeholder="Data Final">
                </div>
            </div>
            <div class="col-md-12 text-center">
                <button class="btn btn-danger" type="button" data-toggle="collapse" aria-expanded="false">
                    Limpar Filtro
                </button>
                <button class="btn btn-dark" type="button" data-toggle="collapse" aria-expanded="false">
                    Aplicar Filtro
                </button>
            </div>
        </div>
    </div>

    <div class="container-fluid">
        <!-- Botão de Filtros -->
        <div class="row mb-4">
            <div class="col-md-4">
                <input type="text" id="occurrenceSearch" class="form-control" placeholder="Pesquisar..." aria-controls="occurrencesTable">
            </div>
            <div class="col-md-4 text-left">
                <button class="btn btn-dark" type="button" data-toggle="collapse" data-target="#filterSection" aria-expanded="false" aria-controls="filterSection">
                    <i class="fas fa-filter fa-chevron-down"></i>
                </button>
            </div>
            <div class="col-md-4 text-right">
                <a href="{{ path('occurrences_closed') }}" class="btn btn-dark">
                    Ocorrências Encerradas
                </a>
            </div>
        </div>

        <!-- Tabela de Ocorrências -->
        <div class="table-responsive tableOccurrenceContainer">
            <table id="occurrencesTable" class="table table-striped table-bordered" style="width:100%">
                <thead>
                    <tr>
                    <!-- Adicionado via javascript -->
                    </tr>
                </thead>
                <tbody>
                    <!-- Adicionado via javascript -->
                </tbody>
            </table>
        </div>
    </div>
</section>
{% include 'occurrences/ModalViewOccurrence.html.twig' %}
{% include 'occurrences/ModalEditOccurrence.html.twig' %}

{% endblock %}

{% block javascripts %}
{{ parent() }}
<script>

    function showViewOccurrenceModal(occurrence) {
        console.log("dados da ocorrencia:",occurrence);
        // Preencher os dados do modal
        $('#viewOccurrenceModalLabel').text(occurrence.title);
        $('.viewOccurrenceCode').text(occurrence.occurrenceCode);
        $('#viewOccurrenceStatus').text(occurrence.status);
        $('#viewOccurrencePriority').text(occurrence.priority);
        $('#viewOccurrenceDate').text(occurrence.occurred_date);
        $('#viewOccurrenceType').text(occurrence.type);
        $('#viewOccurrenceSLA').text(occurrence.sla_due_date);
        $('#viewOccurrenceLastUpdate').text(occurrence.updatedAt);
        $('#viewOccurrenceDescription').text(occurrence.description);

        // Endereço
        $('#viewOccurrenceAddressStreet').text(occurrence.address.street);
        $('#viewOccurrenceAddressNumber').text(occurrence.address.number);
        $('#viewOccurrenceAddressComplement').text(occurrence.address.complement);
        $('#viewOccurrenceAddressNeighborhood').text(occurrence.address.neighborhood);
        $('#viewOccurrenceAddressCity').text(occurrence.address.city);
        $('#viewOccurrenceAddressState').text(occurrence.address.state);
        $('#viewOccurrenceAddressZipcode').text(occurrence.address.zipcode);

        // Comentários
        $('#viewOccurrenceComments').empty();
        occurrence.comments.forEach(comment => {
            $('#viewOccurrenceComments').append(`
                <div class="comment">
                    <p><strong>${comment.user}:</strong> ${comment.description}</p>
                    <p><small>${comment.comment_date}</small></p>
                </div>
            `);
        });

        // Mídias Anexadas
        $('#viewOccurrenceMedia').empty();
        occurrence.media.forEach(media => {
            if (media.type.startsWith('image')) {
                $('#viewOccurrenceMedia').append(`<img src="${media.file_path}" class="img-fluid mb-2">`);
            } else if (media.type.startsWith('video')) {
                $('#viewOccurrenceMedia').append(`<video src="${media.file_path}" class="img-fluid mb-2" controls></video>`);
            }
        });

        // Mostrar o modal
        $('#modalViewOccurrence').modal('show');
    }

     function showEditOccurrenceModal(occurrence) {
        console.log("Dados da ocorrência:", occurrence);
        // Preencher os dados do modal
        $('#editOccurrenceModalLabel').text(occurrence.title);
        $('.editOccurrenceCode').text(occurrence.occurrenceCode);
        $('#editOccurrenceStatus').text(occurrence.status);
        $('#editOccurrencePriority').text(occurrence.priority);
        $('#editOccurrenceDate').text(occurrence.occurred_date);
        $('#editOccurrenceType').text(occurrence.type);
        $('#editOccurrenceSLA').text(occurrence.sla_due_date);
        $('#editOccurrenceLastUpdate').text(occurrence.updatedAt);

        // Endereço
        $('#editOccurrenceAddressStreet').text(occurrence.address.street);
        $('#editOccurrenceAddressNumber').text(occurrence.address.number);
        $('#editOccurrenceAddressComplement').text(occurrence.address.complement);
        $('#editOccurrenceAddressNeighborhood').text(occurrence.address.neighborhood);
        $('#editOccurrenceAddressCity').text(occurrence.address.city);
        $('#editOccurrenceAddressState').text(occurrence.address.state);
        $('#editOccurrenceAddressZipcode').text(occurrence.address.zipcode);

        // Descrição
        $('#editOccurrenceDescription').text(occurrence.description);

        // Carregar comentários existentes
        loadExistingComments(occurrence.comments);

        // Mostrar o modal
        $('#modalEditOccurrence').modal('show');
    }

    // Função para carregar comentários existentes
    function loadExistingComments(comments) {
        $('#occurrenceCommentss').empty();
        comments.forEach(comment => {
            $('#editOccurrenceComments').append(`
                <div class="comment">
                    <p><strong>${comment.user}:</strong> ${comment.description}</p>
                    <p><small>${comment.comment_date}</small></p>
                </div>
            `);
        });
    }

    var occurrencesTable;
    var occurrencesTableData = [
        {% for occurrenceData in occurrencesData %}
            {
               id: {{ occurrenceData.id }},
               occurrenceCode: "{{ occurrenceData.occurrenceCode }}",
               title: "{{ occurrenceData.title }}",
               status: "{{ occurrenceData.status }}",
               priority: "{{ occurrenceData.priority }}",
               occurrenceDate: "{{ occurrenceData.occurredDate ? occurrenceData.occurredDate|date('Y-m-d') : '' }}",
               occurrenceType: "{{ occurrenceData.occurrenceTypeName }}",
               description: "{{ occurrenceData.description }}",
               slaExpiration: "{{ occurrenceData.slaDueDate ? occurrenceData.slaDueDate|date('Y-m-d') : '' }}",
               address: "{{ occurrenceData.fullAddress }}",
            },
        {% endfor %}
    ];

function formatDate(date) {
    if (!date) return 'Não definido';
   
    const d = new Date(date);
    const year = d.getFullYear();
    const month = String(d.getMonth() + 1).padStart(2, '0'); // Mês é zero-indexado
    const day = String(d.getDate()).padStart(2, '0');
    const hours = String(d.getHours()).padStart(2, '0');
    const minutes = String(d.getMinutes()).padStart(2, '0');

    return `${day}/${month}/${year}`;
}


function setupOccurrencesDataTable() {
    if ($.fn.DataTable.isDataTable('#occurrencesTable')) {
        $('#occurrencesTable').DataTable().clear().destroy();
    }

    occurrencesTable = $('#occurrencesTable').DataTable({
        searching: true,
        paging: false,
        info: false,
        data: occurrencesTableData,
        columns: [
            { data: 'id', title: 'ID', visible: false },
            { data: 'occurrenceCode', title: 'Código' },
            { data: 'title', title: 'Título' },
            { data: 'status', title: 'Status' },
            { data: 'priority', title: 'Prioridade' },
            { data: 'occurrenceDate', title: 'Data da Ocorrência' },
            { data: 'occurrenceType', title: 'Tipo' },
            { data: 'description', title: 'Descrição' },
            { data: 'slaExpiration', title: 'SLA' },
            { data: 'address', title: 'Endereço' },
            { title: 'Ações' }
        ],
        columnDefs: [
            {
                targets: 5, // Índice da coluna "Data da Ocorrência"
                render: function (data, type, row, meta) {
                    return formatDate(data);
                }
            },
            {
                targets: 8, // Índice da coluna "Data da Ocorrência"
                render: function (data, type, row, meta) {
                    return formatDate(data);
                }
            },
            {
                targets: -1, // Última coluna (Ações)
                render: function (data, type, row, meta) {
                    console.log("vem da data",data);
                    console.log("vem do row",row);
                    var occurrenceId = row.id; 
                    return `
                        <button class="btn-action occurrence-view" title="Visualizar" data-occurrence-id="${occurrenceId}"><i class="fa fa-eye"></i></button>
                        <button class="btn-action occurrence-close" title="Encerrar Ocorrência" data-occurrence-id="${occurrenceId}"><i class="fa fa-lock"></i></button>
                    `;
                }
            }
        ],
        lengthChange: false,
        ordering: true,
        dom: 'lrtip',
        scrollX: true,
        fixedHeader: true,
        language: {
            zeroRecords: "Nenhum registro correspondente encontrado",
            emptyTable: "Nenhum dado disponível na tabela"
        }
    });

    adjustTable();
}

function adjustTable() {
    setTimeout(function() {
        occurrencesTable.columns.adjust().draw();
    }, 100);
}

$(document).ready(function() {
    // Inicialização do DataTables
    setupOccurrencesDataTable();

    // Filtro de pesquisa personalizado
    $('#occurrenceSearch').on('keyup', function() {
        occurrencesTable.search(this.value).draw();
    });

    // Exibição dos filtros ao clicar no botão
    $('#filterSection').on('shown.bs.collapse', function () {
        $('.btn-filter').addClass('active'); // Adiciona classe de destaque ao botão de filtro
        $('.filter-box').slideDown(); // Animação de slide para exibir os filtros
    });

    // Ocultação dos filtros ao fechar o modal
    $('#filterSection').on('hidden.bs.collapse', function () {
        $('.btn-filter').removeClass('active'); // Remove classe de destaque ao fechar os filtros
        $('.filter-box').slideUp(); // Animação de slide para ocultar os filtros
    });

    // Adicionar evento ao botão de visualização
    $(document).on('click', '.occurrence-view', function () {
        var occurrenceId = $(this).data('occurrence-id');
        // Fetch occurrence data by ID (replace this with your actual data fetching logic)
        var occurrence = {
            occurrenceCode: '12345',
            title: 'Ocorrência de Teste',
            status: 'Aberto',
            priority: 'Alta',
            occurred_date: '2024-07-01',
            type: 'Tipo 1',
            sla_due_date: '2024-07-10',
            updatedAt: '2024-07-08',
            description: 'Descrição detalhada da ocorrência...',
            address: {
                street: 'Rua A',
                number: '123',
                complement: 'Apt 456',
                neighborhood: 'Bairro B',
                city: 'Cidade C',
                state: 'Estado D',
                zipcode: '12345-678'
            },
            comments: [
                {
                    user: 'Usuário 1',
                    description: 'Primeiro comentário...',
                    comment_date: '2024-07-05'
                },
                {
                    user: 'Usuário 2',
                    description: 'Segundo comentário...',
                    comment_date: '2024-07-06'
                }
            ],
            media: [
                {
                    type: 'image/png',
                    file_path: '/path/to/image1.png'
                },
                {
                    type: 'video/mp4',
                    file_path: '/path/to/video1.mp4'
                }
            ]
        };

        showViewOccurrenceModal(occurrence);
    });

    $(document).on('click', '.occurrence-close', function () {
        console.log("botao funcionando")
        var occurrenceId = $(this).data('occurrence-id');
        // Fetch occurrence data by ID (replace this with your actual data fetching logic)
        var occurrence = {
            occurrenceCode: '12345',
            title: 'Ocorrência de Teste',
            status: 'Aberto',
            priority: 'Alta',
            occurred_date: '2024-07-01',
            type: 'Tipo 1',
            sla_due_date: '2024-07-10',
            updatedAt: '2024-07-08',
            description: 'Descrição detalhada da ocorrência...',
            address: {
                street: 'Rua A',
                number: '123',
                complement: 'Apt 456',
                neighborhood: 'Bairro B',
                city: 'Cidade C',
                state: 'Estado D',
                zipcode: '12345-678'
            },
            comments: [
                {
                    user: 'Usuário 1',
                    description: 'Primeiro comentário...',
                    comment_date: '2024-07-05'
                },
                {
                    user: 'Usuário 2',
                    description: 'Segundo comentário...',
                    comment_date: '2024-07-06'
                }
            ],
            media: [
                {
                    type: 'image/png',
                    file_path: '/path/to/image1.png'
                },
                {
                    type: 'video/mp4',
                    file_path: '/path/to/video1.mp4'
                }
            ]
        };

        showEditOccurrenceModal(occurrence);
    });

















});
</script>
{% endblock %}
